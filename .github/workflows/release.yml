name: Build Binaries

on:
  release:
    types: [released, prereleased]
    
jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]      

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.6
          
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev
          
      - name: Build
        run: pipenv run build
    
      - name: Upload Linux binaries
        if: matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with: 
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Windows binaries
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with: 
          files: dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create macOS DMG
        if: matrix.os == 'macos-latest'
        run: hdiutil create -volname MONSTERFIGHT -srcfolder dist/*.app -ov -format UDZO MONSTER.FIGHT.dmg
          
      - name: Upload macOS binaries
        if: matrix.os == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with: 
          files: MONSTER.FIGHT.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#      - if: failure() 
#        name: Delete release
#        run: |
#          curl -s -X DELETE \
#            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
#            -H "Accept: application/vnd.github.v3+json" \
#            https://api.github.com/repos/${{ github.event.repository.full_name }}/releases/${{ github.event.release.id }}
#          curl -s -X DELETE \
#            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
#            -H "Accept: application/vnd.github.v3+json" \
#            https://api.github.com/repos/${{ github.event.repository.full_name }}/git/refs/tags/${{ github.event.release.tag_name }}
